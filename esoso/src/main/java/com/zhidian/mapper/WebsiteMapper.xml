<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zhidian.mapper.WebsiteMapper">

	<resultMap type="WebsiteBO" id="websiteBOMap">
		<id column="id" property="id" />
		<result property="name" column="name" />
		<result property="searchAddr" column="searchAddr" />
		<result property="pagination" column="pagination" />
		<result property="sign" column="sign" />
		<result property="resultProcessor" column="resultProcessor" />
		<result property="resultPipeline" column="resultPipeline" />
		<result property="pageProcessor" column="pageProcessor" />
		<result property="pagePipeline" column="pagePipeline" />
		<result property="resultRObject" column="resultRObject" />
		<result property="pageRObject" column="pageRObject" />
		<result property="useSearch" column="useSearch" />
		<result property="type" column="type" />
		<result property="defaultPageCss" column="defaultPageCss" />
		<result property="defPageCss" column="defPageCss"/>
		<result property="defPageConfig" column="defPageConfig" />
		<result property="defResultConfig" column="defResultConfig" />
		<result property="defRequestHeader" column="defRequestHeader" />
		<association property="version" column="versionId"
			javaType="Version">
			<id column="id" property="id" />
			<result property="name" column="name" />
			<result property="using" column="using" />
			<result property="defCss" column="defCss" />
			<result property="defPage" column="defPage" />
			<result property="defJs" column="defJs" />
			<result property="sign" column="sign" />
			<result property="type" column="type" />
		</association>
	</resultMap>

	<insert id="insertWebsitesForDataInfoAdminService01SimpleWebsite"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into
		websites set alias = #{alias},createTime =
		#{createTime},createMan =
		#{createMan},defaultPageCss =
		#{defaultPageCss},
		defPageConfig =
		#{defPageConfig},defRequestHeader =
		#{defRequestHeader},defResultConfig = #{defResultConfig},fullAddr =
		#{fullAddr},name=#{name},
		pagePipeline= #{pagePipeline},pageProcessor =
		#{pageProcessor},pageRObject = #{pageRObject},pagination =
		#{pagination},resultPipeline =#{resultPipeline},
		resultProcessor =
		#{resultProcessor},resultRObject =
		#{resultRObject},searchAddr =
		#{searchAddr},shortAddr=#{shortAddr},
		sign =
		#{sign},type=#{type},useSearch=#{useSearch},websites.using =
		#{using},versionId = #{versionId};
	</insert>

	<insert id="insertWebsitesForDataInfoAdminService02SimpleWebsite"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into
		websites set alias = #{alias},createTime = #{createTime},createMan =
		#{createMan},defaultPageCss = #{defaultPageCss},
		defPageConfig =
		#{defPageConfig},defRequestHeader =
		#{defRequestHeader},defResultConfig = #{defResultConfig},fullAddr =
		#{fullAddr},name=#{name},
		pagePipeline= #{pagePipeline},pageProcessor =
		#{pageProcessor},pageRObject = #{pageRObject},pagination =
		#{pagination},
		resultPipeline =#{resultPipeline},resultProcessor =
		#{resultProcessor},resultRObject = #{resultRObject},
		searchAddr =
		#{searchAddr},shortAddr=#{shortAddr},sign =
		#{sign},type=#{type},useSearch=#{useSearch},websites.using = #{using},
		versionId = (select id from versions as v where v.id =
		#{versionId} and v.name = #{name} and v.type = 'websites');
	</insert>

	<!-- <insert id="addWebsite" parameterType="Website" keyColumn="id" useGeneratedKeys="true" 
		keyProperty="id"> insert into websites(name,shortAddr,fullAddr,createTime,createMan,sign) 
		values(#{name},#{shortAddr},#{fullAddr},#{createTime},#{createMan},#{sign}) 
		</insert> -->

	<select id="queryWebsitesForPageService01SimpleWebsiteBO"
		resultType="WebsiteBO" parameterType="hashmap">
		select * from websites where type = #{type} and name = #{name}
		<choose>
			<when test="id == 0">
				group by id limit 1;
			</when>
			<otherwise>
				and id = #{id}
			</otherwise>
		</choose>
	</select>

	<select id="queryWebsitesForWormsService01ListWebsiteBO"
		resultMap="websiteBOMap">
		select * from websites where type = #{type} and name in
		<foreach collection="names" open="(" close=")" separator=","
			item="item">
			#{item}
		</foreach>
		and websites.using = 1;
	</select>

	<select id="queryWebsitesForWormsService01SimpleWebsiteBO"
		resultType="WebsiteBO">
		select * from websites where type = #{type} and name =
		#{name} and websites.using = 1;
	</select>

	<select id="queryWebsitesForDataInfoAdminService01ListWebsite"
		parameterType="string" resultType="Website">
		select * from websites as w where
		type='engine' and name = #{name} group by w.using desc,id;
	</select>

	<select id="queryWebsitesForDataInfoAdminService01Website"
		resultType="Website">
		select * from websites where type='engine' and name =
		#{name} and id = #{id};
	</select>

	<select id="selectWebsitesForDataInfoAdminService01ListString"
		resultType="string">
		select distinct name from websites;
	</select>
	
	<select id="selectWebsitesForAdminInfoSupport01ListId" resultType="int">
		select w.id from websites as w , websites as e where w.name = e.name and w.type= e.type and w.type2 = e.type2 and e.id = 
		(select websiteId from pullArticles where id = #{id} and name = #{name}) and w.nmp =1 ;
	</select>
	
	<select id="querywebsitesForAdminSupportService01SimpleWebsiteBO2" resultType="WebsiteBO2">
		select * from websites where id = #{id} and nmp = 1; 
	</select>
	
	<select id="queryWebsitesForAdminSupportService01ListWebsiteBO3" resultType="WebsiteBO3">
		select w.*,count(b.id) as nowLink from websites as w,pullarticles as b where w.nmp = 1 and w.using = 1 and b.websiteId = w.id and b.status =0;
	</select>

	<update id="updateWebsitesForDataInfoAdminService01SmpleWebsiteBO2">
		update websites set searchAddr =
		#{searchAddr},pagination=#{pagination},sign=#{sign},useSearch=#{useSearch},defaultPageCss=#{defaultPageCss},defPageConfig=#{defPageConfig},
		defResultConfig=#{defResultConfig},defRequestHeader=#{defRequestHeader},updateMan= #{updateMan},updateTime=#{updateTime},
		defPageCss = #{defPageCss},alias = #{alias} ,shortAddr = #{shortAddr},fullAddr = #{fullAddr} where id = #{id} and name =#{name};
	</update>

	<update id="updateWebsitesForDataInfoAdminService01SimpleWebsite"
		statementType="CALLABLE">
		call websitesp1(#{id},#{name});
	</update>

	<delete id="deleteWebistesForDataInfoAdminService01SimpleId"
		parameterType="int">
		delete from websites where id = #{id} and websites.using
		!= 1;
	</delete>

</mapper>
